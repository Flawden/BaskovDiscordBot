package ru.flawden.BascovDiscordBot.lavaplayer;

import com.sedmelluq.discord.lavaplayer.player.AudioLoadResultHandler;
import com.sedmelluq.discord.lavaplayer.player.AudioPlayerManager;
import com.sedmelluq.discord.lavaplayer.player.DefaultAudioPlayerManager;
import com.sedmelluq.discord.lavaplayer.source.AudioSourceManagers;
import com.sedmelluq.discord.lavaplayer.tools.FriendlyException;
import com.sedmelluq.discord.lavaplayer.track.AudioPlaylist;
import com.sedmelluq.discord.lavaplayer.track.AudioTrack;
import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.Guild;
import net.dv8tion.jda.api.entities.channel.concrete.TextChannel;

import java.awt.*;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –ø–ª–µ–µ—Ä–∞, –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Å–æ–∑–¥–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
 * {@link GuildMusicManager} –¥–ª—è –∫–∞–∂–¥–æ–π –≥–∏–ª—å–¥–∏–∏.
 * –≠—Ç–æ—Ç –∫–ª–∞—Å—Å —Ç–∞–∫–∂–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
 * –∞—É–¥–∏–æ—Ç—Ä–µ–∫–æ–≤ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º {@link AudioPlayerManager}.
 *
 * @author Flawden
 * @version 1.0
 */
public class PlayerManager {

    private static PlayerManager INSTANCE;
    private final Map<Long, GuildMusicManager> musicManagers;
    private final AudioPlayerManager audioPlayerManager;

    public PlayerManager() {
        this.musicManagers = new HashMap<>();
        this.audioPlayerManager = new DefaultAudioPlayerManager();

        AudioSourceManagers.registerRemoteSources(this.audioPlayerManager);
        AudioSourceManagers.registerLocalSource(this.audioPlayerManager);
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä {@link GuildMusicManager} –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–π –≥–∏–ª—å–¥–∏–∏.
     *
     * @param guild –≥–∏–ª—å–¥–∏—è, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–π —Ç—Ä–µ–±—É–µ—Ç—Å—è –º–µ–Ω–µ–¥–∂–µ—Ä –º—É–∑—ã–∫–∏
     * @return —ç–∫–∑–µ–º–ø–ª—è—Ä {@link GuildMusicManager} –¥–ª—è —É–∫–∞–∑–∞–Ω–Ω–æ–π –≥–∏–ª—å–¥–∏–∏
     */
    public GuildMusicManager getMusicManager(Guild guild) {
        return this.musicManagers.computeIfAbsent(guild.getIdLong(), (guildId) -> {
            final GuildMusicManager guildMusicManager = new GuildMusicManager(this.audioPlayerManager, guild);
            guild.getAudioManager().setSendingHandler(guildMusicManager.getSendHandler());
            return guildMusicManager;
        });
    }

    /**
     * –ó–∞–≥—Ä—É–∂–∞–µ—Ç —Ç—Ä–µ–∫ –ø–æ-—É–∫–∞–∑–∞–Ω–Ω–æ–º—É URL –∏ –¥–æ–±–∞–≤–ª—è–µ—Ç –µ–≥–æ –≤ –æ—á–µ—Ä–µ–¥—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è.
     *
     * @param textChannel —Ç–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª, –≤ –∫–æ—Ç–æ—Ä—ã–π –±—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ –∑–∞–≥—Ä—É–∑–∫–∏
     * @param trackURL    URL —Ç—Ä–µ–∫–∞ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
     */
    public void loadAndPlay(TextChannel textChannel, String trackURL) {
        final GuildMusicManager musicManager = this.getMusicManager(textChannel.getGuild());
        this.audioPlayerManager.loadItemOrdered(musicManager, trackURL, new AudioLoadResultHandler() {
            @Override
            public void trackLoaded(AudioTrack audioTrack) {
                musicManager.scheduler.queue(audioTrack);

                EmbedBuilder embed = new EmbedBuilder();
                embed.setTitle("üé∂ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å");
                embed.setDescription(audioTrack.getInfo().title);
                embed.setColor(Color.GREEN);
                embed.setThumbnail("https://i.ytimg.com/vi/" + audioTrack.getInfo().identifier + "/hqdefault.jpg");

                textChannel.sendMessageEmbeds(embed.build()).queue();
            }

            @Override
            public void playlistLoaded(AudioPlaylist audioPlaylist) {
                final List<AudioTrack> tracks = audioPlaylist.getTracks();

                if (!tracks.isEmpty()) {
                    musicManager.scheduler.queue(tracks.get(0));

                    // –°–æ–∑–¥–∞–µ–º EmbedBuilder –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è
                    EmbedBuilder embed = new EmbedBuilder();
                    embed.setTitle("üé∂ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ –æ—á–µ—Ä–µ–¥—å");
                    embed.setDescription("–¢—Ä–µ–∫ **" + tracks.get(0).getInfo().title + "** –æ—Ç **" + tracks.get(0).getInfo().author + "**.");
                    embed.setColor(Color.GREEN);
                    embed.setThumbnail("https://i.ytimg.com/vi/" + tracks.get(0).getInfo().identifier + "/hqdefault.jpg");

                    textChannel.sendMessageEmbeds(embed.build()).queue();
                } else {
                    textChannel.sendMessage("–ü–ª–µ–π–ª–∏—Å—Ç –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ–∑ –æ—à–∏–±–æ–∫.").queue();
                }
            }

            @Override
            public void noMatches() {
                EmbedBuilder embed = new EmbedBuilder();
                embed.setTitle("‚ùå –û—à–∏–±–∫–∞");
                embed.setDescription("–ü–µ—Å–Ω—è –Ω–µ –±—ã–ª–∞ –Ω–∞–π–¥–µ–Ω–∞. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –≤–≤–µ–ª–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ –±–µ–∑ –æ—à–∏–±–æ–∫.");
                embed.setColor(Color.RED);
                textChannel.sendMessageEmbeds(embed.build()).queue();
            }

            @Override
            public void loadFailed(FriendlyException e) {
                EmbedBuilder embed = new EmbedBuilder();
                embed.setTitle("‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞");
                embed.setDescription("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç—Ä–µ–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞ –ø–æ–∑–∂–µ.");
                embed.setColor(Color.RED);
                textChannel.sendMessageEmbeds(embed.build()).queue();
            }
        }); // <-- –ó–∞–∫—Ä—ã–≤–∞—é—â–∞—è —Å–∫–æ–±–∫–∞ –¥–ª—è loadItemOrdered
    }

    /**
     * –ü–æ–ª—É—á–∞–µ—Ç —ç–∫–∑–µ–º–ø–ª—è—Ä {@link PlayerManager}.
     *
     * @return —ç–∫–∑–µ–º–ø–ª—è—Ä {@link PlayerManager}
     */
    public static PlayerManager getINSTANCE() {

        if (INSTANCE == null) {
            INSTANCE = new PlayerManager();
        }

        return INSTANCE;
    }
}
