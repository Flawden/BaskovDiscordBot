package ru.flawden.BascovDiscordBot.commands;

import net.dv8tion.jda.api.EmbedBuilder;
import net.dv8tion.jda.api.entities.User;
import org.springframework.stereotype.Component;
import ru.flawden.BascovDiscordBot.config.eventconfig.Event;
import ru.flawden.BascovDiscordBot.config.eventconfig.EventArgs;

import java.awt.*;
import java.util.concurrent.TimeUnit;

@Component
public class SpamEvent implements Event {

    @Override
    public void execute(EventArgs event) {
        EmbedBuilder embed = new EmbedBuilder();
        embed.setColor(Color.CYAN);

        if (event.getArgs().length <= 1) {
            embed.setTitle("üì© –û—à–∏–±–∫–∞ —Å–ø–∞–º–∞");
            embed.setDescription("–£–∫–∞–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è —Å–ø–∞–º–∞!\n" +
                    "–ü—Ä–∏–º–µ—Ä: `!spam @Nick`");
            event.getTextChannel().sendMessageEmbeds(embed.build()).queue();
            return;
        }

        String mention = event.getArgs()[1];
        User targetUser = null;
        if (mention.matches("<@!?\\d+>")) {
            String userId = mention.replaceAll("[^\\d]", "");
            targetUser = event.getGuild().getMemberById(userId) != null ?
                    event.getGuild().getMemberById(userId).getUser() : null;
        }

        if (targetUser == null) {
            embed.setTitle("üì© –û—à–∏–±–∫–∞ —Å–ø–∞–º–∞");
            embed.setDescription("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ —É–ø–æ–º–∏–Ω–∞–Ω–∏—é: `" + mention + "`\n" +
                    "–£–∫–∞–∂–∏ –≤–∞–ª–∏–¥–Ω–æ–µ —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä: `!spam @Nick`");
            event.getTextChannel().sendMessageEmbeds(embed.build()).queue();
            return;
        }

        embed.setTitle("üì© –°–ø–∞–º –Ω–∞—á–∞—Ç");
        embed.setDescription("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å " + event.getMember().getAsMention() + " –Ω–∞—á–∞–ª —Å–ø–∞–º –¥–ª—è " +
                targetUser.getAsMention() + "!\n" +
                "–ë—É–¥–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ 10 —Å–æ–æ–±—â–µ–Ω–∏–π.");
        event.getTextChannel().sendMessageEmbeds(embed.build()).queue();

        for (int i = 0; i < 10; i++) {
            embed = new EmbedBuilder();
            embed.setColor(Color.CYAN);
            embed.setFooter("–°–æ–æ–±—â–µ–Ω–∏–µ " + (i + 1) + " –∏–∑ 10", null);
            embed.setDescription(targetUser.getAsMention() + " !!! –ü—Ä–æ—Å—ã–ø–∞–π—Å—è!!!");
            event.getTextChannel().sendMessageEmbeds(embed.build())
                    .queueAfter(i * 500, TimeUnit.MILLISECONDS);
        }
    }

    @Override
    public String getGroup() {
        return "–û–±—â–∏–µ";
    }

    @Override
    public String getName() {
        return "spam";
    }

    @Override
    public String helpMessage() {
        return "–ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–∑–≤–∞–Ω–∞ –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å—é –∏–∑ 10 —Å–æ–æ–±—â–µ–Ω–∏–π —Å —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –ø–æ–∑–≤–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞. –ü—Ä–∏–º–µ—Ä: spam @Nick";
    }

    @Override
    public boolean needOwner() {
        return true;
    }
}